{"version":3,"sources":["../../../app/controllers/users_controller.js"],"names":["index","req","res","next","find","lean","exec","err","users","json","show","findById","params","id","user","status","error","errmsg","create","body","update","findByIdAndUpdate","$set","new","destroy","findByIdAndRemove"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AAKO,IAAMA,wBAAQ,SAARA,KAAQ,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACvC,iBAAKC,IAAL,GAAYC,IAAZ,GAAmBC,IAAnB,CAAwB,UAACC,GAAD,EAAMC,KAAN,EAAgB;AACtCN,QAAIO,IAAJ,CAAS,2BAAUD,KAAV,CAAT;AACD,GAFD;AAGD,CAJM;;AAMA,IAAME,sBAAO,SAAPA,IAAO,CAACT,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACtC,iBAAKQ,QAAL,CAAcV,IAAIW,MAAJ,CAAWC,EAAzB,EAA6BR,IAA7B,GAAoCC,IAApC,CAAyC,UAACC,GAAD,EAAMO,IAAN,EAAe;AACtD,QAAIP,GAAJ,EAAS;AACP,aAAOL,IAAIa,MAAJ,CAAW,GAAX,EACJN,IADI,CACC;AACJO,eAAOT,IAAIU;AADP,OADD,CAAP;AAID,KALD,MAKO;AACLf,UAAIO,IAAJ,CAAS,0BAASK,IAAT,CAAT;AACD;AACF,GATD;AAUD,CAXM;;AAaA,IAAMI,0BAAS,SAATA,MAAS,CAACjB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxC,iBAAKe,MAAL,CAAYjB,IAAIkB,IAAJ,CAASL,IAArB,EAA2B,UAASP,GAAT,EAAcO,IAAd,EAAoB;AAC7C,QAAIP,GAAJ,EAAS;AACP,aAAOL,IAAIa,MAAJ,CAAW,GAAX,EACJN,IADI,CACC;AACJO,eAAOT,IAAIU;AADP,OADD,CAAP;AAID,KALD,MAKO;AACL,aAAOf,IAAIO,IAAJ,CAAS,EAAT,CAAP;AACD;AACF,GATD;AAUD,CAXM;;AAaA,IAAMW,0BAAS,SAATA,MAAS,CAACnB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACxC,iBAAKkB,iBAAL,CAAuBpB,IAAIW,MAAJ,CAAWC,EAAlC,EAAsC;AACpCS,UAAMrB,IAAIkB,IAAJ,CAASL;AADqB,GAAtC,EAEG;AACDS,SAAK;AADJ,GAFH,EAIGjB,IAJH,CAIQ,UAACC,GAAD,EAAMO,IAAN,EAAe;AACrB,QAAIP,GAAJ,EAAS;AACP,aAAOL,IAAIa,MAAJ,CAAW,GAAX,EACJN,IADI,CACC;AACJO,eAAOT,IAAIU;AADP,OADD,CAAP;AAID,KALD,MAKO;AACL,aAAOf,IAAIO,IAAJ,CAAS,0BAASK,IAAT,CAAT,CAAP;AACD;AACF,GAbD;AAcD,CAfM;;AAiBA,IAAMU,4BAAU,SAAVA,OAAU,CAACvB,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACzC,iBAAKsB,iBAAL,CAAuBxB,IAAIW,MAAJ,CAAWC,EAAlC,EAAsCP,IAAtC,CAA2C,UAACC,GAAD,EAAMO,IAAN,EAAe;AACxD,QAAIP,GAAJ,EAAS;AACP,aAAOL,IAAIa,MAAJ,CAAW,GAAX,EACJN,IADI,CACC;AACJO,eAAOT,IAAIU;AADP,OADD,CAAP;AAID,KALD,MAKO;AACL,aAAOf,IAAIO,IAAJ,CAAS,EAAT,CAAP;AACD;AACF,GATD;AAUD,CAXM","file":"users_controller.js","sourcesContent":["import User from '../models/user';\nimport {\n  userIndex,\n  userShow\n} from '../views/users_view';\n\nexport const index = (req, res, next) => {\n  User.find().lean().exec((err, users) => {\n    res.json(userIndex(users));\n  });\n};\n\nexport const show = (req, res, next) => {\n  User.findById(req.params.id).lean().exec((err, user) => {\n    if (err) {\n      return res.status(400)\n        .json({\n          error: err.errmsg\n        });\n    } else {\n      res.json(userShow(user));\n    }\n  });\n}\n\nexport const create = (req, res, next) => {\n  User.create(req.body.user, function(err, user) {\n    if (err) {\n      return res.status(400)\n        .json({\n          error: err.errmsg\n        });\n    } else {\n      return res.json({});\n    }\n  });\n}\n\nexport const update = (req, res, next) => {\n  User.findByIdAndUpdate(req.params.id, {\n    $set: req.body.user\n  }, {\n    new: true\n  }).exec((err, user) => {\n    if (err) {\n      return res.status(400)\n        .json({\n          error: err.errmsg\n        });\n    } else {\n      return res.json(userShow(user));\n    }\n  });\n}\n\nexport const destroy = (req, res, next) => {\n  User.findByIdAndRemove(req.params.id).exec((err, user) => {\n    if (err) {\n      return res.status(400)\n        .json({\n          error: err.errmsg\n        });\n    } else {\n      return res.json({});\n    }\n  });\n}"]}